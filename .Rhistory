labs(title = "", x = "Result", y = "EPA") +
theme_minimal() +
guides(fill="none") +
scale_fill_brewer(palette = "Reds")
pass_plays %>%
select(complete_pass,incomplete_pass,sack,interception,epa) %>%
pivot_longer(cols = c(complete_pass:interception),names_to = "play_result") %>%
filter(value == 1) %>%
group_by(play_result) %>%
summarise(EPA = mean(epa,na.rm = T),.prop = n()/ nrow(.)) %>%
ungroup() %>%
mutate(plot_color = ifelse(EPA < 0, "red", "blue")) %>%
ggplot(aes(x = play_result, y = EPA,fill = plot_color)) +
geom_col() +
labs(title = "Average Expected Points Added", x = "Result", y = "EPA") +
theme_minimal() +
guides(fill="none") +
scale_fill_brewer(palette = "Reds")
pass_plays %>%
select(complete_pass,incomplete_pass,sack,interception,epa) %>%
pivot_longer(cols = c(complete_pass:interception),names_to = "play_result") %>%
filter(value == 1) %>%
group_by(play_result) %>%
summarise(EPA = mean(epa,na.rm = T),.prop = n()/ nrow(.)) %>%
ungroup() %>%
mutate(plot_color = ifelse(EPA < 0, "red", "blue")) %>%
ggplot(aes(x = play_result, y = EPA,fill = plot_color)) +
geom_col() +
geom_label(aes(text = round(EPA)))
pass_plays %>%
select(complete_pass,incomplete_pass,sack,interception,epa) %>%
pivot_longer(cols = c(complete_pass:interception),names_to = "play_result") %>%
filter(value == 1) %>%
group_by(play_result) %>%
summarise(EPA = mean(epa,na.rm = T),.prop = n()/ nrow(.)) %>%
ungroup() %>%
mutate(plot_color = ifelse(EPA < 0, "red", "blue")) %>%
ggplot(aes(x = play_result, y = EPA,fill = plot_color)) +
geom_col() +
geom_label(aes(text = round(EPA))) +
labs(title = "Average Expected Points Added", x = "Result", y = "EPA") +
theme_minimal() +
guides(fill="none") +
scale_fill_brewer(palette = "Reds")
pass_plays %>%
select(complete_pass,incomplete_pass,sack,interception,epa) %>%
pivot_longer(cols = c(complete_pass:interception),names_to = "play_result") %>%
filter(value == 1) %>%
group_by(play_result) %>%
summarise(EPA = mean(epa,na.rm = T),.prop = n()/ nrow(.)) %>%
ungroup() %>%
mutate(plot_color = ifelse(EPA < 0, "red", "blue")) %>%
ggplot(aes(x = play_result, y = EPA,fill = plot_color)) +
geom_col() +
geom_text(aes(text = round(EPA))) +
labs(title = "Average Expected Points Added", x = "Result", y = "EPA") +
theme_minimal() +
guides(fill="none") +
scale_fill_brewer(palette = "Reds")
pass_plays %>%
select(complete_pass,incomplete_pass,sack,interception,epa) %>%
pivot_longer(cols = c(complete_pass:interception),names_to = "play_result") %>%
filter(value == 1) %>%
group_by(play_result) %>%
summarise(EPA = mean(epa,na.rm = T),.prop = n()/ nrow(.)) %>%
ungroup() %>%
mutate(plot_color = ifelse(EPA < 0, "red", "blue")) %>%
ggplot(aes(x = play_result, y = EPA,fill = plot_color)) +
geom_col() +
geom_text(aes(label = round(EPA))) +
labs(title = "Average Expected Points Added", x = "Result", y = "EPA") +
theme_minimal() +
guides(fill="none") +
scale_fill_brewer(palette = "Reds")
pass_plays %>%
select(complete_pass,incomplete_pass,sack,interception,epa) %>%
pivot_longer(cols = c(complete_pass:interception),names_to = "play_result") %>%
filter(value == 1) %>%
group_by(play_result) %>%
summarise(EPA = mean(epa,na.rm = T),.prop = n()/ nrow(.)) %>%
ungroup() %>%
mutate(plot_color = ifelse(EPA < 0, "red", "blue")) %>%
ggplot(aes(x = play_result, y = EPA,fill = plot_color)) +
geom_col() +
geom_text(aes(label = round(EPA,2))) +
labs(title = "Average Expected Points Added", x = "Result", y = "EPA") +
theme_minimal() +
guides(fill="none") +
scale_fill_brewer(palette = "Reds")
nflreadr::load_pbp(2019) -> readr_pbp
data$pass
pass_plays %>%
select(complete_pass,incomplete_pass,sack,interception,epa) %>%
pivot_longer(cols = c(complete_pass:interception),names_to = "play_result") %>%
filter(value == 1) %>%
group_by(play_result) %>%
summarise(EPA = mean(epa,na.rm = T),.prop = n()/ nrow(.),ev = EPA *.prop)
data %>%
select(pass, rush,epa) %>%
pivot_longer(cols = c(pass,rush),names_to = "play_result") %>%
filter(value == 1) %>%
group_by(play_result) %>%
summarise(EPA = mean(epa,na.rm = T),.prop = n()/ nrow(.),ev = EPA *.prop)
ng_pass = nflreadr::load_nextgen_stats(2019, 'passing')
View(ng_pass)
View(ng_pass)
library(nflreadr)
load_pfr_advstats(2019,'def','week') -> pfr_def
View(pfr_def)
load_pfr_advstats(2019,'pass','week') -> pfr_def
View(pfr_def)
load_pfr_advstats(2019,'pass','week') -> pfr_pass
load_pfr_advstats(2019,'def','week') -> pfr_def
View(ng_pass)
View(pfr_pass)
load_pfr_advstats(2015,'def','week') -> pfr_def
library('nflfastR')
library("tidyverse")
library('pROC')
library('tidymodels')
data <- load_pbp(2019)
pass_plays = data %>% filter(play_type == 'pass')
# Check the unique play results
pass_plays %>%
group_by(play_type_nfl) %>%
tally()
pass_plays %>%
select(complete_pass,incomplete_pass,sack,interception,epa) %>%
pivot_longer(cols = c(complete_pass:interception),names_to = "play_result") %>%
filter(value == 1) %>%
group_by(play_result) %>%
summarise(EPA = mean(epa,na.rm = T),.prop = n()/ nrow(.),ev = EPA *.prop) %>%
ungroup() %>%
mutate(plot_color = ifelse(EPA < 0, "red", "blue")) %>%
ggplot(aes(x = play_result, y = EPA,fill = plot_color)) +
geom_col() +
geom_text(aes(label = round(EPA,2))) +
labs(title = "Average Expected Points Added", x = "Result", y = "EPA") +
theme_minimal() +
guides(fill="none") +
scale_fill_brewer(palette = "Reds")
View(pass_plays)
View(data)
pass_plays$start_time
pass_plays$time
pass_plays %>%
separate(col = time, into = c("mins","sec"), sep = ":")
pass_plays %>%
separate(col = time, into = c("mins","sec"), sep = ":") %>%
separate(col = end_clock_time, into = c("end_mins","end_sec"),sep = ":")
pass_plays %>%
separate(col = time, into = c("mins","sec"), sep = ":") %>%
separate(col = end_clock_time, into = c("end_mins","end_sec"),sep = ":") %>%
select(contains("_mins | _sec"))
pass_plays %>%
separate(col = time, into = c("mins","sec"), sep = ":") %>%
separate(col = end_clock_time, into = c("end_mins","end_sec"),sep = ":") %>%
select(contains("_mins|_sec"))
pass_plays %>%
separate(col = time, into = c("mins","sec"), sep = ":") %>%
separate(col = end_clock_time, into = c("end_mins","end_sec"),sep = ":") %>%
select(contains("_mins"))
pass_plays %>%
separate(col = time, into = c("mins","sec"), sep = ":") %>%
separate(col = end_clock_time, into = c("end_mins","end_sec"),sep = ":") %>%
select(contains("mins"))
pass_plays$end_clock_time
library('nflfastR')
library("tidyverse")
library('pROC')
library('tidymodels')
data <- load_pbp(2019)
data %>%
dplyr::filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, posteam, home_team) %>%
dplyr::summarise(
off_epa = mean(epa),
) %>%
dplyr::left_join(NFL_PBP %>%
filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, defteam, away_team) %>%
dplyr::summarise(def_epa = mean(epa)),
by = c("game_id", "posteam" = "defteam", "season", "week"),
all.x = TRUE
) %>%
dplyr::mutate(opponent = ifelse(posteam == home_team, away_team, home_team)) %>%
dplyr::select(game_id, season, week, home_team, away_team, posteam, opponent, off_epa, def_epa) -> epa_adj
data %>%
dplyr::filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, posteam, home_team) %>%
dplyr::summarise(
off_epa = mean(epa),
) %>%
dplyr::left_join(NFL_PBP %>%
filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, defteam, away_team) %>%
dplyr::summarise(def_epa = mean(epa)),
by = c("game_id", "posteam" = "defteam", "season", "week")
) %>%
dplyr::mutate(opponent = ifelse(posteam == home_team, away_team, home_team)) %>%
dplyr::select(game_id, season, week, home_team, away_team, posteam, opponent, off_epa, def_epa) -> epa_adj
data %>%
dplyr::filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, posteam, home_team) %>%
dplyr::summarise(
off_epa = mean(epa),
) %>%
dplyr::left_join(NFL_PBP %>%
filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, defteam, away_team) %>%
dplyr::summarise(def_epa = mean(epa)),
by = c("game_id", "posteam" = "defteam", "season", "week")
) %>%
dplyr::mutate(opponent = ifelse(posteam == home_team, away_team, home_team)) %>%
dplyr::select(game_id, season, week, home_team, away_team, posteam, opponent, off_epa, def_epa) -> epa_adj
data %>%
dplyr::filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, posteam, home_team) %>%
dplyr::summarise(
off_epa = mean(epa),
) %>%
dplyr::left_join(data %>%
filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, defteam, away_team) %>%
dplyr::summarise(def_epa = mean(epa)),
by = c("game_id", "posteam" = "defteam", "season", "week")
) %>%
dplyr::mutate(opponent = ifelse(posteam == home_team, away_team, home_team)) %>%
dplyr::select(game_id, season, week, home_team, away_team, posteam, opponent, off_epa, def_epa) -> epa_adj
View(epa_adj)
# Construct opponent dataset and lag the moving average of their last ten games.
opponent_data <- epa_data %>%
dplyr::select(-opponent) %>%
dplyr::rename(
opp_off_epa = off_epa,
opp_def_epa = def_epa
) %>%
dplyr::group_by(posteam) %>%
dplyr::arrange(season, week) %>%
dplyr::mutate(
opp_def_epa = pracma::movavg(opp_def_epa, n = 10, type = "s"),
opp_def_epa = dplyr::lag(opp_def_epa),
opp_off_epa = pracma::movavg(opp_off_epa, n = 10, type = "s"),
opp_off_epa = dplyr::lag(opp_off_epa)
)
data %>%
dplyr::filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, posteam, home_team) %>%
dplyr::summarise(
off_epa = mean(epa),
) %>%
dplyr::left_join(data %>%
filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, defteam, away_team) %>%
dplyr::summarise(def_epa = mean(epa)),
by = c("game_id", "posteam" = "defteam", "season", "week")
) %>%
dplyr::mutate(opponent = ifelse(posteam == home_team, away_team, home_team)) %>%
dplyr::select(game_id, season, week, home_team, away_team, posteam, opponent, off_epa, def_epa) -> epa_data
# Construct opponent dataset and lag the moving average of their last ten games.
opponent_data <- epa_data %>%
dplyr::select(-opponent) %>%
dplyr::rename(
opp_off_epa = off_epa,
opp_def_epa = def_epa
) %>%
dplyr::group_by(posteam) %>%
dplyr::arrange(season, week) %>%
dplyr::mutate(
opp_def_epa = pracma::movavg(opp_def_epa, n = 10, type = "s"),
opp_def_epa = dplyr::lag(opp_def_epa),
opp_off_epa = pracma::movavg(opp_off_epa, n = 10, type = "s"),
opp_off_epa = dplyr::lag(opp_off_epa)
)
# Merge opponent data back in with the weekly epa data
epa_data <- epa_data %>%
left_join(
opponent_data,
by = c("game_id", "season", "week", "home_team", "away_team", "opponent" = "posteam")
)
View(epa_data)
View(epa_data)
View(opponent_data)
epa_data <- epa_data %>%
dplyr::left_join(epa_data %>%
dplyr::filter(posteam == home_team) %>%
dplyr::group_by(season, week) %>%
dplyr::summarise(
league_mean = mean(off_epa + def_epa)
) %>%
dplyr::ungroup() %>%
dplyr::group_by(season) %>%
dplyr::mutate(
league_mean = lag(pracma::movavg(league_mean, n = 10, type = "s"), ) # We lag because we need to know the league mean up to that point in the season
),
by = c("season", "week")
)
data <- load_pbp(2024)
pass_plays = data %>% filter(play_type == 'pass')
# Check the unique play results
pass_plays %>%
group_by(play_type_nfl) %>%
tally()
data %>%
dplyr::filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, posteam, home_team) %>%
dplyr::summarise(
off_epa = mean(epa),
) %>%
dplyr::left_join(data %>%
filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, defteam, away_team) %>%
dplyr::summarise(def_epa = mean(epa)),
by = c("game_id", "posteam" = "defteam", "season", "week")
) %>%
dplyr::mutate(opponent = ifelse(posteam == home_team, away_team, home_team)) %>%
dplyr::select(game_id, season, week, home_team, away_team, posteam, opponent, off_epa, def_epa) -> epa_data
# Construct opponent dataset and lag the moving average of their last ten games.
opponent_data <- epa_data %>%
dplyr::select(-opponent) %>%
dplyr::rename(
opp_off_epa = off_epa,
opp_def_epa = def_epa
) %>%
dplyr::group_by(posteam) %>%
dplyr::arrange(season, week) %>%
dplyr::mutate(
opp_def_epa = pracma::movavg(opp_def_epa, n = 10, type = "s"),
opp_def_epa = dplyr::lag(opp_def_epa),
opp_off_epa = pracma::movavg(opp_off_epa, n = 10, type = "s"),
opp_off_epa = dplyr::lag(opp_off_epa)
)
# Construct opponent dataset and lag the moving average of their last ten games.
opponent_data <- epa_data %>%
dplyr::select(-opponent) %>%
dplyr::rename(
opp_off_epa = off_epa,
opp_def_epa = def_epa
) %>%
dplyr::group_by(posteam) %>%
dplyr::arrange(season, week) %>%
dplyr::mutate(
opp_def_epa = pracma::movavg(opp_def_epa, n = 9, type = "s"),
opp_def_epa = dplyr::lag(opp_def_epa),
opp_off_epa = pracma::movavg(opp_off_epa, n = 9, type = "s"),
opp_off_epa = dplyr::lag(opp_off_epa)
)
# Merge opponent data back in with the weekly epa data
epa_data <- epa_data %>%
left_join(
opponent_data,
by = c("game_id", "season", "week", "home_team", "away_team", "opponent" = "posteam")
)
epa_data <- epa_data %>%
dplyr::left_join(epa_data %>%
dplyr::filter(posteam == home_team) %>%
dplyr::group_by(season, week) %>%
dplyr::summarise(
league_mean = mean(off_epa + def_epa)
) %>%
dplyr::ungroup() %>%
dplyr::group_by(season) %>%
dplyr::mutate(
league_mean = lag(pracma::movavg(league_mean, n = 10, type = "s"), ) # We lag because we need to know the league mean up to that point in the season
),
by = c("season", "week")
)
# Adjust EPA
epa_data <- epa_data %>%
dplyr::mutate(
off_adjustment_factor = ifelse(!is.na(league_mean), league_mean - opp_def_epa, 0),
def_adjustment_factor = ifelse(!is.na(league_mean), league_mean - opp_off_epa, 0),
adjusted_off_epa = off_epa + off_adjustment_factor,
adjusted_def_epa = def_epa + def_adjustment_factor,
)
data %>%
dplyr::filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, posteam, home_team) %>%
dplyr::summarise(
off_epa = mean(epa),
) %>%
dplyr::left_join(data %>%
filter(!is.na(epa), !is.na(ep), !is.na(posteam), play_type == "pass" | play_type == "run") %>%
dplyr::group_by(game_id, season, week, defteam, away_team) %>%
dplyr::summarise(def_epa = mean(epa)),
by = c("game_id", "posteam" = "defteam", "season", "week")
) %>%
dplyr::mutate(opponent = ifelse(posteam == home_team, away_team, home_team)) %>%
dplyr::select(game_id, season, week, home_team, away_team, posteam, opponent, off_epa, def_epa) -> epa_data
# Construct opponent dataset and lag the moving average of their last ten games.
opponent_data <- epa_data %>%
dplyr::select(-opponent) %>%
dplyr::rename(
opp_off_epa = off_epa,
opp_def_epa = def_epa
) %>%
dplyr::group_by(posteam) %>%
dplyr::arrange(season, week) %>%
dplyr::mutate(
opp_def_epa = pracma::movavg(opp_def_epa, n = 9, type = "s"),
opp_def_epa = dplyr::lag(opp_def_epa),
opp_off_epa = pracma::movavg(opp_off_epa, n = 9, type = "s"),
opp_off_epa = dplyr::lag(opp_off_epa)
)
# Merge opponent data back in with the weekly epa data
epa_data <- epa_data %>%
left_join(
opponent_data,
by = c("game_id", "season", "week", "home_team", "away_team", "opponent" = "posteam")
)
epa_data <- epa_data %>%
dplyr::left_join(epa_data %>%
dplyr::filter(posteam == home_team) %>%
dplyr::group_by(season, week) %>%
dplyr::summarise(
league_mean = mean(off_epa + def_epa)
) %>%
dplyr::ungroup() %>%
dplyr::group_by(season) %>%
dplyr::mutate(
league_mean = lag(pracma::movavg(league_mean, n = 10, type = "s"), ) # We lag because we need to know the league mean up to that point in the season
),
by = c("season", "week")
)
# Adjust EPA
epa_data_adj <- epa_data %>%
dplyr::mutate(
off_adjustment_factor = ifelse(!is.na(league_mean), league_mean - opp_def_epa, 0),
def_adjustment_factor = ifelse(!is.na(league_mean), league_mean - opp_off_epa, 0),
adjusted_off_epa = off_epa + off_adjustment_factor,
adjusted_def_epa = def_epa + def_adjustment_factor,
)
View(epa_data_adj)
ggplot(epa_data_adj) +
geom_segment(aes(x=off_epa, xend=adjusted_off_epa, y=posteam, yend=posteam), color="grey") +
geom_point( aes(x=x, y=value1), color=rgb(0.2,0.7,0.1,0.5), size=3 ) +
geom_point( aes(x=x, y=value2), color=rgb(0.7,0.2,0.1,0.5), size=3 ) +
#coord_flip()+
theme_ipsum() +
theme(
legend.position = "none",
) +
ylab("EPA Adjustment") +
xlab("Team")
ggplot(epa_data_adj) +
geom_segment(aes(x=off_epa, xend=adjusted_off_epa, y=posteam, yend=posteam), color="grey") +
geom_point( aes(x=x, y=value1), color=rgb(0.2,0.7,0.1,0.5), size=3 ) +
geom_point( aes(x=x, y=value2), color=rgb(0.7,0.2,0.1,0.5), size=3 ) +
#coord_flip()+
theme_minimal() +
theme(
legend.position = "none",
) +
ylab("EPA Adjustment") +
xlab("Team")
ggplot(epa_data_adj) +
geom_segment(aes(x=off_epa, xend=adjusted_off_epa, y=posteam, yend=posteam), color="grey") +
geom_point( aes(x=off_epa, y=y), color=rgb(0.2,0.7,0.1,0.5), size=3 ) +
geom_point( aes(x=adjusted_off_epa, y=y), color=rgb(0.7,0.2,0.1,0.5), size=3 ) +
#coord_flip()+
theme_minimal() +
theme(
legend.position = "none",
) +
ylab("EPA Adjustment") +
xlab("Team")
ggplot(epa_data_adj) +
geom_segment(aes(x=off_epa, xend=adjusted_off_epa, y=posteam, yend=posteam), color="grey") +
geom_point( aes(x=off_epa, y=posteam), color=rgb(0.2,0.7,0.1,0.5), size=3 ) +
geom_point( aes(x=adjusted_off_epa, y=posteam), color=rgb(0.7,0.2,0.1,0.5), size=3 ) +
#coord_flip()+
theme_minimal() +
theme(
legend.position = "none",
) +
ylab("EPA Adjustment") +
xlab("Team")
epa_data_adj %>%
group_by(posteam) %>%
summarise(across(c(off_epa,adjusted_off_epa),mean))
epa_data_adj %>%
group_by(posteam) %>%
summarise(across(c(off_epa,adjusted_off_epa),mean),n())
epa_data_adj %>%
group_by(posteam) %>%
summarise(across(c(off_epa,adjusted_off_epa),mean),n()) %>%
ggplot(epa_data_adj) +
geom_segment(aes(x=off_epa, xend=adjusted_off_epa, y=posteam, yend=posteam), color="grey") +
geom_point( aes(x=off_epa, y=posteam), color=rgb(0.2,0.7,0.1,0.5), size=3 ) +
geom_point( aes(x=adjusted_off_epa, y=posteam), color=rgb(0.7,0.2,0.1,0.5), size=3 ) +
#coord_flip()+
theme_minimal() +
theme(
legend.position = "none",
) +
ylab("EPA Adjustment") +
xlab("Team")
epa_data_adj %>%
group_by(posteam) %>%
summarise(across(c(off_epa,adjusted_off_epa),mean),n()) %>%
ggplot() +
geom_segment(aes(x=off_epa, xend=adjusted_off_epa, y=posteam, yend=posteam), color="grey") +
geom_point( aes(x=off_epa, y=posteam), color=rgb(0.2,0.7,0.1,0.5), size=3 ) +
geom_point( aes(x=adjusted_off_epa, y=posteam), color=rgb(0.7,0.2,0.1,0.5), size=3 ) +
#coord_flip()+
theme_minimal() +
theme(
legend.position = "none",
) +
ylab("EPA Adjustment") +
xlab("Team")
rgb(0.2,0.7,0.1,0.5)
